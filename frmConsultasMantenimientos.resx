<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_QuejasPositivas.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5T++U/vlNfm/cJsCwvauf//Z
</value>
  </data>
</root>